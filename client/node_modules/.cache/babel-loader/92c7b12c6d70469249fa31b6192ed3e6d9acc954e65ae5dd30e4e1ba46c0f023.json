{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./QuizPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [finished, setFinished] = useState(false);\n  useEffect(() => {\n    const storedFlashcards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\n\n    // Prepare quiz questions with 1 correct + 3 fake options\n    const formattedQuestions = storedFlashcards.map(flashcard => {\n      const fakeOptions = [\"Backpropagation is an algorithm used to train a neural network by minimizing errors.\", \"CNNs understand image data by extracting features from small regions.\", \"A monitor is a higher-level synchronization construct with more functionality than semaphores.\"];\n\n      // shuffle options\n      const options = [...fakeOptions, flashcard.answer].sort(() => Math.random() - 0.5);\n      return {\n        question: flashcard.question,\n        correctAnswer: flashcard.answer,\n        options\n      };\n    });\n\n    // âœ… Limit questions â†’ 15 max\n    let limitedQuestions = formattedQuestions;\n    if (formattedQuestions.length > 15) {\n      limitedQuestions = formattedQuestions.sort(() => Math.random() - 0.5) // shuffle questions\n      .slice(0, 15); // pick first 15\n    }\n    setQuestions(limitedQuestions);\n  }, []);\n  const handleNext = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedOption(null);\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setFinished(true);\n    }\n  };\n  const handlePrev = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n  const handleFinish = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setFinished(true);\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: finished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Q\", currentQuestion + 1, \". \", questions[currentQuestion].question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `option ${selectedOption === option ? \"selected\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: () => setSelectedOption(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), option]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          disabled: currentQuestion === 0,\n          children: \"\\u2B05 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), currentQuestion + 1 === questions.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFinish,\n          disabled: !selectedOption,\n          children: \"Finish \\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: !selectedOption,\n          children: \"Next \\u27A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"iEvv8gayeR6QSligY0VRlFyTDco=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QuizPage","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","selectedOption","setSelectedOption","finished","setFinished","storedFlashcards","JSON","parse","localStorage","getItem","formattedQuestions","map","flashcard","fakeOptions","options","answer","sort","Math","random","question","correctAnswer","limitedQuestions","length","slice","handleNext","handlePrev","handleFinish","children","fileName","_jsxFileName","lineNumber","columnNumber","className","option","index","type","name","value","checked","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./QuizPage.css\";\r\n\r\nconst QuizPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedFlashcards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\r\n\r\n    // Prepare quiz questions with 1 correct + 3 fake options\r\n    const formattedQuestions = storedFlashcards.map((flashcard) => {\r\n      const fakeOptions = [\r\n        \"Backpropagation is an algorithm used to train a neural network by minimizing errors.\",\r\n        \"CNNs understand image data by extracting features from small regions.\",\r\n        \"A monitor is a higher-level synchronization construct with more functionality than semaphores.\"\r\n      ];\r\n\r\n      // shuffle options\r\n      const options = [...fakeOptions, flashcard.answer].sort(() => Math.random() - 0.5);\r\n\r\n      return {\r\n        question: flashcard.question,\r\n        correctAnswer: flashcard.answer,\r\n        options,\r\n      };\r\n    });\r\n\r\n    // âœ… Limit questions â†’ 15 max\r\n    let limitedQuestions = formattedQuestions;\r\n    if (formattedQuestions.length > 15) {\r\n      limitedQuestions = formattedQuestions\r\n        .sort(() => Math.random() - 0.5) // shuffle questions\r\n        .slice(0, 15); // pick first 15\r\n    }\r\n\r\n    setQuestions(limitedQuestions);\r\n  }, []);\r\n\r\n  const handleNext = () => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedOption(null);\r\n\r\n    if (currentQuestion + 1 < questions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setFinished(true);\r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    setFinished(true);\r\n  };\r\n\r\n  if (questions.length === 0) return <h2>Loading questions...</h2>;\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {finished ? (\r\n        <div className=\"score-section\">\r\n          <h2>ðŸŽ‰ Quiz Finished!</h2>\r\n          <p>\r\n            Your Score: {score} / {questions.length}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"quiz-card\">\r\n          <h3>\r\n            Q{currentQuestion + 1}. {questions[currentQuestion].question}\r\n          </h3>\r\n\r\n          <div className=\"options\">\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <label key={index} className={`option ${selectedOption === option ? \"selected\" : \"\"}`}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"option\"\r\n                  value={option}\r\n                  checked={selectedOption === option}\r\n                  onChange={() => setSelectedOption(option)}\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"buttons\">\r\n            <button onClick={handlePrev} disabled={currentQuestion === 0}>\r\n              â¬… Previous\r\n            </button>\r\n            {currentQuestion + 1 === questions.length ? (\r\n              <button onClick={handleFinish} disabled={!selectedOption}>\r\n                Finish âœ…\r\n              </button>\r\n            ) : (\r\n              <button onClick={handleNext} disabled={!selectedOption}>\r\n                Next âž¡\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}