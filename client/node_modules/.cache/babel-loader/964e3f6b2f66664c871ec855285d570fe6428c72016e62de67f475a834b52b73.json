{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\QnSpeakPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnSpeakPage = () => {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n  const [totalByDifficulty, setTotalByDifficulty] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n  const [shownByDifficulty, setShownByDifficulty] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n\n  // Load flashcards and update totals dynamically\n  const loadFlashcards = () => {\n    const cards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\n    const normalizedCards = cards.map(c => ({\n      ...c,\n      difficulty: c.difficulty ? c.difficulty.toLowerCase() : \"easy\"\n    }));\n    setFlashcards(normalizedCards);\n\n    // Totals per difficulty\n    const totals = {\n      easy: 0,\n      medium: 0,\n      hard: 0\n    };\n    normalizedCards.forEach(c => {\n      if (totals[c.difficulty] !== undefined) totals[c.difficulty]++;\n    });\n    setTotalByDifficulty(totals);\n\n    // Reset progress\n    setShownByDifficulty({\n      easy: 0,\n      medium: 0,\n      hard: 0\n    });\n    setDifficultyProgress({\n      easy: 0,\n      medium: 0,\n      hard: 0\n    });\n    setCurrentIndex(0);\n\n    // Increment progress for first card automatically\n    if (normalizedCards.length > 0) incrementProgress(normalizedCards[0].difficulty);\n  };\n  useEffect(() => {\n    loadFlashcards();\n\n    // Listen for new uploads\n    window.addEventListener(\"storage\", loadFlashcards);\n    return () => window.removeEventListener(\"storage\", loadFlashcards);\n  }, []);\n  const currentCard = flashcards[currentIndex];\n  const incrementProgress = level => {\n    if (!level || !totalByDifficulty[level]) return;\n    setShownByDifficulty(prev => {\n      const updatedShown = {\n        ...prev\n      };\n      updatedShown[level] = Math.min((updatedShown[level] || 0) + 1, totalByDifficulty[level]);\n      setDifficultyProgress(prevProgress => {\n        const updatedProgress = {\n          ...prevProgress\n        };\n        updatedProgress[level] = Math.round(updatedShown[level] / totalByDifficulty[level] * 100);\n        return updatedProgress;\n      });\n      return updatedShown;\n    });\n  };\n  const speakAnswer = () => {\n    if (!currentCard) return;\n    if (\"speechSynthesis\" in window) {\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(currentCard.answer);\n      utterance.lang = \"en-US\";\n      window.speechSynthesis.speak(utterance);\n      setShowAnswer(true);\n    }\n  };\n  const stopSpeech = () => {\n    if (\"speechSynthesis\" in window) window.speechSynthesis.cancel();\n  };\n  const nextQuestion = () => {\n    stopSpeech();\n    setShowAnswer(false);\n    if (currentIndex < flashcards.length - 1) {\n      const nextIdx = currentIndex + 1;\n      setCurrentIndex(nextIdx);\n      incrementProgress(flashcards[nextIdx].difficulty);\n    } else {\n      alert(\"🎉 You have completed all flashcards!\");\n      setCurrentIndex(0);\n    }\n  };\n  if (flashcards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"2rem\"\n      },\n      children: \"No flashcards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f0f4f8\",\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDA QnSpeak Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        borderRadius: \"10px\",\n        padding: \"2rem\",\n        width: \"450px\",\n        backgroundColor: \"#fff\",\n        boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \" \", currentCard.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: \"#007bff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), \" \", currentCard.answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: speakAnswer,\n          children: \"\\uD83C\\uDFA4 Voice Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopSpeech,\n          children: \"\\u23F9 Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextQuestion,\n          children: \"\\u27A1 Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1.5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Progress by Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), [\"easy\", \"medium\", \"hard\"].map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: level.charAt(0).toUpperCase() + level.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              width: \"250px\",\n              height: \"10px\",\n              backgroundColor: \"#ddd\",\n              borderRadius: \"5px\",\n              marginLeft: \"10px\",\n              overflow: \"hidden\",\n              verticalAlign: \"middle\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${difficultyProgress[level]}%`,\n                height: \"100%\",\n                backgroundColor: level === \"easy\" ? \"#4caf50\" : level === \"medium\" ? \"#ff9800\" : \"#f44336\",\n                transition: \"width 0.3s\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"0.5rem\"\n            },\n            children: [difficultyProgress[level], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(QnSpeakPage, \"gs6Q1xYsKFhpvqdxIRvQ/71Mu8E=\");\n_c = QnSpeakPage;\nexport default QnSpeakPage;\nvar _c;\n$RefreshReg$(_c, \"QnSpeakPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QnSpeakPage","_s","flashcards","setFlashcards","currentIndex","setCurrentIndex","showAnswer","setShowAnswer","difficultyProgress","setDifficultyProgress","easy","medium","hard","totalByDifficulty","setTotalByDifficulty","shownByDifficulty","setShownByDifficulty","loadFlashcards","cards","JSON","parse","localStorage","getItem","normalizedCards","map","c","difficulty","toLowerCase","totals","forEach","undefined","length","incrementProgress","window","addEventListener","removeEventListener","currentCard","level","prev","updatedShown","Math","min","prevProgress","updatedProgress","round","speakAnswer","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","answer","lang","speak","stopSpeech","nextQuestion","nextIdx","alert","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","minHeight","flexDirection","backgroundColor","padding","border","borderRadius","width","boxShadow","marginBottom","question","color","gap","flexWrap","onClick","charAt","toUpperCase","slice","height","marginLeft","overflow","verticalAlign","transition","_c","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/QnSpeakPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst QnSpeakPage = () => {\r\n  const [flashcards, setFlashcards] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [difficultyProgress, setDifficultyProgress] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n  const [totalByDifficulty, setTotalByDifficulty] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n  const [shownByDifficulty, setShownByDifficulty] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n\r\n  // Load flashcards and update totals dynamically\r\n  const loadFlashcards = () => {\r\n    const cards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\r\n    const normalizedCards = cards.map((c) => ({\r\n      ...c,\r\n      difficulty: c.difficulty ? c.difficulty.toLowerCase() : \"easy\",\r\n    }));\r\n    setFlashcards(normalizedCards);\r\n\r\n    // Totals per difficulty\r\n    const totals = { easy: 0, medium: 0, hard: 0 };\r\n    normalizedCards.forEach((c) => {\r\n      if (totals[c.difficulty] !== undefined) totals[c.difficulty]++;\r\n    });\r\n    setTotalByDifficulty(totals);\r\n\r\n    // Reset progress\r\n    setShownByDifficulty({ easy: 0, medium: 0, hard: 0 });\r\n    setDifficultyProgress({ easy: 0, medium: 0, hard: 0 });\r\n    setCurrentIndex(0);\r\n\r\n    // Increment progress for first card automatically\r\n    if (normalizedCards.length > 0) incrementProgress(normalizedCards[0].difficulty);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFlashcards();\r\n\r\n    // Listen for new uploads\r\n    window.addEventListener(\"storage\", loadFlashcards);\r\n    return () => window.removeEventListener(\"storage\", loadFlashcards);\r\n  }, []);\r\n\r\n  const currentCard = flashcards[currentIndex];\r\n\r\n  const incrementProgress = (level) => {\r\n    if (!level || !totalByDifficulty[level]) return;\r\n\r\n    setShownByDifficulty((prev) => {\r\n      const updatedShown = { ...prev };\r\n      updatedShown[level] = Math.min(\r\n        (updatedShown[level] || 0) + 1,\r\n        totalByDifficulty[level]\r\n      );\r\n\r\n      setDifficultyProgress((prevProgress) => {\r\n        const updatedProgress = { ...prevProgress };\r\n        updatedProgress[level] = Math.round(\r\n          (updatedShown[level] / totalByDifficulty[level]) * 100\r\n        );\r\n        return updatedProgress;\r\n      });\r\n\r\n      return updatedShown;\r\n    });\r\n  };\r\n\r\n  const speakAnswer = () => {\r\n    if (!currentCard) return;\r\n    if (\"speechSynthesis\" in window) {\r\n      window.speechSynthesis.cancel();\r\n      const utterance = new SpeechSynthesisUtterance(currentCard.answer);\r\n      utterance.lang = \"en-US\";\r\n      window.speechSynthesis.speak(utterance);\r\n      setShowAnswer(true);\r\n    }\r\n  };\r\n\r\n  const stopSpeech = () => {\r\n    if (\"speechSynthesis\" in window) window.speechSynthesis.cancel();\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    stopSpeech();\r\n    setShowAnswer(false);\r\n    if (currentIndex < flashcards.length - 1) {\r\n      const nextIdx = currentIndex + 1;\r\n      setCurrentIndex(nextIdx);\r\n      incrementProgress(flashcards[nextIdx].difficulty);\r\n    } else {\r\n      alert(\"🎉 You have completed all flashcards!\");\r\n      setCurrentIndex(0);\r\n    }\r\n  };\r\n\r\n  if (flashcards.length === 0) {\r\n    return <p style={{ textAlign: \"center\", marginTop: \"2rem\" }}>No flashcards available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        minHeight: \"100vh\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"#f0f4f8\",\r\n        padding: \"2rem\",\r\n      }}\r\n    >\r\n      <h2>📚 QnSpeak Flashcards</h2>\r\n\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          borderRadius: \"10px\",\r\n          padding: \"2rem\",\r\n          width: \"450px\",\r\n          backgroundColor: \"#fff\",\r\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\r\n          marginTop: \"2rem\",\r\n        }}\r\n      >\r\n        <div style={{ marginBottom: \"1rem\" }}>\r\n          <strong>Q:</strong> {currentCard.question}\r\n        </div>\r\n\r\n        {showAnswer && (\r\n          <div style={{ marginBottom: \"1rem\", color: \"#007bff\" }}>\r\n            <strong>A:</strong> {currentCard.answer}\r\n          </div>\r\n        )}\r\n\r\n        <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\r\n          <button onClick={speakAnswer}>🎤 Voice Answer</button>\r\n          <button onClick={stopSpeech}>⏹ Stop</button>\r\n          <button onClick={nextQuestion}>➡ Next</button>\r\n        </div>\r\n\r\n        <div style={{ marginTop: \"1.5rem\" }}>\r\n          <h4>Progress by Difficulty:</h4>\r\n          {[\"easy\", \"medium\", \"hard\"].map((level) => (\r\n            <div key={level} style={{ marginBottom: \"0.5rem\" }}>\r\n              <strong>{level.charAt(0).toUpperCase() + level.slice(1)}</strong>\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  width: \"250px\",\r\n                  height: \"10px\",\r\n                  backgroundColor: \"#ddd\",\r\n                  borderRadius: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  overflow: \"hidden\",\r\n                  verticalAlign: \"middle\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: `${difficultyProgress[level]}%`,\r\n                    height: \"100%\",\r\n                    backgroundColor:\r\n                      level === \"easy\" ? \"#4caf50\" : level === \"medium\" ? \"#ff9800\" : \"#f44336\",\r\n                    transition: \"width 0.3s\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <span style={{ marginLeft: \"0.5rem\" }}>{difficultyProgress[level]}%</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnSpeakPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}