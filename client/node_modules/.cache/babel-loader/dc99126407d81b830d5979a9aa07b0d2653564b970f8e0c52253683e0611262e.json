{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\ReviewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ReviewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  useEffect(() => {\n    // âœ… Always take only latest uploaded flashcards\n    const savedCards = localStorage.getItem('flashcards');\n    if (savedCards) {\n      setFlashcards(JSON.parse(savedCards));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDA Review Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), flashcards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No flashcards found. Please upload a PDF first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: flashcards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [\"Q: \", card.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer\",\n          children: [\"A: \", card.answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewPage, \"CNvELsNdxbAt7NsvQEGKRJ4YvCU=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ReviewPage","_s","flashcards","setFlashcards","savedCards","localStorage","getItem","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","card","index","question","answer","_c","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/ReviewPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ReviewPage.css';\r\n\r\nconst ReviewPage = () => {\r\n  const [flashcards, setFlashcards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // âœ… Always take only latest uploaded flashcards\r\n    const savedCards = localStorage.getItem('flashcards');\r\n    if (savedCards) {\r\n      setFlashcards(JSON.parse(savedCards));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"review-container\">\r\n      <h2>ðŸ“š Review Flashcards</h2>\r\n      {flashcards.length === 0 ? (\r\n        <p>No flashcards found. Please upload a PDF first.</p>\r\n      ) : (\r\n        <div className=\"card-list\">\r\n          {flashcards.map((card, index) => (\r\n            <div key={index} className=\"flashcard\">\r\n              <div className=\"question\">Q: {card.question}</div>\r\n              <div className=\"answer\">A: {card.answer}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,IAAIF,UAAU,EAAE;MACdD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BX,OAAA;MAAAW,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BZ,UAAU,CAACa,MAAM,KAAK,CAAC,gBACtBhB,OAAA;MAAAW,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtDf,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBR,UAAU,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BnB,OAAA;QAAiBU,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACpCX,OAAA;UAAKU,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAC,KAAG,EAACO,IAAI,CAACE,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClDf,OAAA;UAAKU,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,KAAG,EAACO,IAAI,CAACG,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFtCI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA5BID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}