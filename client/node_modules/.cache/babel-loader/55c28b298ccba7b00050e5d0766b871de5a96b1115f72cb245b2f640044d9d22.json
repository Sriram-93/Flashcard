{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\ReviewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ReviewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [selectedUpload, setSelectedUpload] = useState(null);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [selectedMark, setSelectedMark] = useState(null);\n\n  // Load all flashcard uploads (history)\n  useEffect(() => {\n    const savedHistory = JSON.parse(localStorage.getItem('flashcardHistory')) || [];\n    setHistory(savedHistory);\n    if (savedHistory.length > 0) {\n      const latest = savedHistory[savedHistory.length - 1];\n      setSelectedUpload(latest);\n      setFilteredCards(latest.cards); // default show all cards\n    }\n  }, []);\n\n  // When a mark button is clicked\n  const handleFilter = marks => {\n    setSelectedMark(marks);\n    if (!selectedUpload) return;\n    const filtered = selectedUpload.cards.filter(c => c.marks === marks);\n    setFilteredCards(filtered);\n  };\n\n  // When a history item (upload) is selected\n  const handleSelectUpload = upload => {\n    setSelectedUpload(upload);\n    setSelectedMark(null);\n    setFilteredCards(upload.cards); // show all cards by default\n  };\n\n  // Count flashcards of a particular mark in selected upload\n  const countByMarks = marks => (selectedUpload === null || selectedUpload === void 0 ? void 0 : selectedUpload.cards.filter(c => c.marks === marks).length) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCDC Upload History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), history.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No uploads yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }, this), history.map((upload, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `history-btn ${selectedUpload === upload ? 'active' : ''}`,\n        onClick: () => handleSelectUpload(upload),\n        children: [\"Upload \", idx + 1, \" - \", upload.date]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDA Review Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter(1),\n          children: [\"1 Mark (\", countByMarks(1), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter(2),\n          children: [\"2 Marks (\", countByMarks(2), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter(5),\n          children: [\"5 Marks (\", countByMarks(5), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter(10),\n          children: [\"10 Marks (\", countByMarks(10), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-list\",\n        children: [filteredCards.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No flashcards for this selection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 42\n        }, this), filteredCards.map((card, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [\"Q: \", card.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer\",\n            children: [\"A: \", card.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marks\",\n            children: [\"\\uD83C\\uDFAF Marks: \", card.marks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewPage, \"bARhBO8O9frC4rfZvonN9ccXm3s=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ReviewPage","_s","history","setHistory","selectedUpload","setSelectedUpload","filteredCards","setFilteredCards","selectedMark","setSelectedMark","savedHistory","JSON","parse","localStorage","getItem","length","latest","cards","handleFilter","marks","filtered","filter","c","handleSelectUpload","upload","countByMarks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","onClick","date","card","question","answer","_c","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/ReviewPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ReviewPage.css';\r\n\r\nconst ReviewPage = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedUpload, setSelectedUpload] = useState(null);\r\n  const [filteredCards, setFilteredCards] = useState([]);\r\n  const [selectedMark, setSelectedMark] = useState(null);\r\n\r\n  // Load all flashcard uploads (history)\r\n  useEffect(() => {\r\n    const savedHistory = JSON.parse(localStorage.getItem('flashcardHistory')) || [];\r\n    setHistory(savedHistory);\r\n\r\n    if (savedHistory.length > 0) {\r\n      const latest = savedHistory[savedHistory.length - 1];\r\n      setSelectedUpload(latest);\r\n      setFilteredCards(latest.cards); // default show all cards\r\n    }\r\n  }, []);\r\n\r\n  // When a mark button is clicked\r\n  const handleFilter = (marks) => {\r\n    setSelectedMark(marks);\r\n    if (!selectedUpload) return;\r\n    const filtered = selectedUpload.cards.filter((c) => c.marks === marks);\r\n    setFilteredCards(filtered);\r\n  };\r\n\r\n  // When a history item (upload) is selected\r\n  const handleSelectUpload = (upload) => {\r\n    setSelectedUpload(upload);\r\n    setSelectedMark(null);\r\n    setFilteredCards(upload.cards); // show all cards by default\r\n  };\r\n\r\n  // Count flashcards of a particular mark in selected upload\r\n  const countByMarks = (marks) =>\r\n    selectedUpload?.cards.filter((c) => c.marks === marks).length || 0;\r\n\r\n  return (\r\n    <div className=\"review-page-container\">\r\n      {/* Left Sidebar: History */}\r\n      <div className=\"history-sidebar\">\r\n        <h3>ðŸ“œ Upload History</h3>\r\n        {history.length === 0 && <p>No uploads yet.</p>}\r\n        {history.map((upload, idx) => (\r\n          <button\r\n            key={idx}\r\n            className={`history-btn ${selectedUpload === upload ? 'active' : ''}`}\r\n            onClick={() => handleSelectUpload(upload)}\r\n          >\r\n            Upload {idx + 1} - {upload.date}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Main Review Area */}\r\n      <div className=\"review-main\">\r\n        <h2>ðŸ“š Review Flashcards</h2>\r\n\r\n        {/* Mark filter buttons */}\r\n        <div className=\"filter-buttons\">\r\n          <button onClick={() => handleFilter(1)}>1 Mark ({countByMarks(1)})</button>\r\n          <button onClick={() => handleFilter(2)}>2 Marks ({countByMarks(2)})</button>\r\n          <button onClick={() => handleFilter(5)}>5 Marks ({countByMarks(5)})</button>\r\n          <button onClick={() => handleFilter(10)}>10 Marks ({countByMarks(10)})</button>\r\n        </div>\r\n\r\n        {/* Flashcards display */}\r\n        <div className=\"card-list\">\r\n          {filteredCards.length === 0 && <p>No flashcards for this selection.</p>}\r\n          {filteredCards.map((card, idx) => (\r\n            <div key={idx} className=\"flashcard\">\r\n              <div className=\"question\">Q: {card.question}</div>\r\n              <div className=\"answer\">A: {card.answer}</div>\r\n              <div className=\"marks\">ðŸŽ¯ Marks: {card.marks}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE;IAC/EX,UAAU,CAACO,YAAY,CAAC;IAExB,IAAIA,YAAY,CAACK,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,MAAM,GAAGN,YAAY,CAACA,YAAY,CAACK,MAAM,GAAG,CAAC,CAAC;MACpDV,iBAAiB,CAACW,MAAM,CAAC;MACzBT,gBAAgB,CAACS,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BV,eAAe,CAACU,KAAK,CAAC;IACtB,IAAI,CAACf,cAAc,EAAE;IACrB,MAAMgB,QAAQ,GAAGhB,cAAc,CAACa,KAAK,CAACI,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,KAAK,KAAKA,KAAK,CAAC;IACtEZ,gBAAgB,CAACa,QAAQ,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAIC,MAAM,IAAK;IACrCnB,iBAAiB,CAACmB,MAAM,CAAC;IACzBf,eAAe,CAAC,IAAI,CAAC;IACrBF,gBAAgB,CAACiB,MAAM,CAACP,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAIN,KAAK,IACzB,CAAAf,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEa,KAAK,CAACI,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,KAAK,KAAKA,KAAK,CAAC,CAACJ,MAAM,KAAI,CAAC;EAEpE,oBACEhB,OAAA;IAAK2B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAEpC5B,OAAA;MAAK2B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B5B,OAAA;QAAA4B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzB7B,OAAO,CAACa,MAAM,KAAK,CAAC,iBAAIhB,OAAA;QAAA4B,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9C7B,OAAO,CAAC8B,GAAG,CAAC,CAACR,MAAM,EAAES,GAAG,kBACvBlC,OAAA;QAEE2B,SAAS,EAAE,eAAetB,cAAc,KAAKoB,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACtEU,OAAO,EAAEA,CAAA,KAAMX,kBAAkB,CAACC,MAAM,CAAE;QAAAG,QAAA,GAC3C,SACQ,EAACM,GAAG,GAAG,CAAC,EAAC,KAAG,EAACT,MAAM,CAACW,IAAI;MAAA,GAJ1BF,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKF,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNhC,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B5B,OAAA;QAAA4B,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAG7BhC,OAAA;QAAK2B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B5B,OAAA;UAAQmC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,CAAC,CAAE;UAAAS,QAAA,GAAC,UAAQ,EAACF,YAAY,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3EhC,OAAA;UAAQmC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,CAAC,CAAE;UAAAS,QAAA,GAAC,WAAS,EAACF,YAAY,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5EhC,OAAA;UAAQmC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,CAAC,CAAE;UAAAS,QAAA,GAAC,WAAS,EAACF,YAAY,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5EhC,OAAA;UAAQmC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,EAAE,CAAE;UAAAS,QAAA,GAAC,YAAU,EAACF,YAAY,CAAC,EAAE,CAAC,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eAGNhC,OAAA;QAAK2B,SAAS,EAAC,WAAW;QAAAC,QAAA,GACvBrB,aAAa,CAACS,MAAM,KAAK,CAAC,iBAAIhB,OAAA;UAAA4B,QAAA,EAAG;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACtEzB,aAAa,CAAC0B,GAAG,CAAC,CAACI,IAAI,EAAEH,GAAG,kBAC3BlC,OAAA;UAAe2B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAClC5B,OAAA;YAAK2B,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAC,KAAG,EAACS,IAAI,CAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClDhC,OAAA;YAAK2B,SAAS,EAAC,QAAQ;YAAAC,QAAA,GAAC,KAAG,EAACS,IAAI,CAACE,MAAM;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9ChC,OAAA;YAAK2B,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,sBAAU,EAACS,IAAI,CAACjB,KAAK;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAH3CE,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIR,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhFID,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAkFhB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}