{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\QnSpeakPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnSpeakPage = () => {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n  const [totalByDifficulty, setTotalByDifficulty] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n  const [shownByDifficulty, setShownByDifficulty] = useState({\n    easy: 0,\n    medium: 0,\n    hard: 0\n  });\n\n  // Load flashcards and calculate totals\n  const loadFlashcards = () => {\n    const cards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\n    const normalizedCards = cards.map(c => ({\n      ...c,\n      difficulty: c.difficulty ? c.difficulty.toLowerCase() : \"easy\"\n    }));\n    setFlashcards(normalizedCards);\n    const totals = {\n      easy: 0,\n      medium: 0,\n      hard: 0\n    };\n    normalizedCards.forEach(c => {\n      if (totals[c.difficulty] !== undefined) totals[c.difficulty]++;\n    });\n    setTotalByDifficulty(totals);\n    setShownByDifficulty({\n      easy: 0,\n      medium: 0,\n      hard: 0\n    });\n    setDifficultyProgress({\n      easy: 0,\n      medium: 0,\n      hard: 0\n    });\n    setCurrentIndex(0);\n    if (normalizedCards.length > 0) incrementProgress(normalizedCards[0].difficulty);\n  };\n  useEffect(() => {\n    loadFlashcards();\n    window.addEventListener(\"storage\", loadFlashcards);\n    return () => window.removeEventListener(\"storage\", loadFlashcards);\n  }, []);\n  const currentCard = flashcards[currentIndex];\n  const incrementProgress = level => {\n    if (!level || !totalByDifficulty[level]) return;\n    setShownByDifficulty(prev => {\n      const updatedShown = {\n        ...prev\n      };\n      updatedShown[level] = Math.min((updatedShown[level] || 0) + 1, totalByDifficulty[level]);\n      setDifficultyProgress(prevProgress => {\n        const updatedProgress = {\n          ...prevProgress\n        };\n        updatedProgress[level] = Math.round(updatedShown[level] / totalByDifficulty[level] * 100);\n        return updatedProgress;\n      });\n      return updatedShown;\n    });\n  };\n  const speakAnswer = () => {\n    if (!currentCard) return;\n    if (\"speechSynthesis\" in window) {\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(currentCard.answer);\n      utterance.lang = \"en-US\";\n      window.speechSynthesis.speak(utterance);\n      setShowAnswer(true);\n    }\n  };\n  const stopSpeech = () => {\n    if (\"speechSynthesis\" in window) window.speechSynthesis.cancel();\n  };\n  const nextQuestion = () => {\n    stopSpeech();\n    setShowAnswer(false);\n    if (currentIndex < flashcards.length - 1) {\n      const nextIdx = currentIndex + 1;\n      setCurrentIndex(nextIdx);\n      incrementProgress(flashcards[nextIdx].difficulty);\n    } else {\n      alert(\"🎉 You have completed all flashcards!\");\n      setCurrentIndex(0);\n    }\n  };\n  if (flashcards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.noFlashcards,\n      children: \"No flashcards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"\\uD83D\\uDCDA QnSpeak Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.cardBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.question,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 38\n        }, this), \" \", currentCard.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.answer,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 38\n        }, this), \" \", currentCard.answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.speakBtn,\n          onClick: speakAnswer,\n          children: \"\\uD83C\\uDFA4 Voice Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.stopBtn,\n          onClick: stopSpeech,\n          children: \"\\u23F9 Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.nextBtn,\n          onClick: nextQuestion,\n          children: \"\\u27A1 Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.progressContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Progress by Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), [\"easy\", \"medium\", \"hard\"].map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.progressRow,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: level.charAt(0).toUpperCase() + level.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.progressBarBg,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.progressBarFill,\n                width: `${difficultyProgress[level]}%`,\n                backgroundColor: level === \"easy\" ? \"#4caf50\" : level === \"medium\" ? \"#ff9800\" : \"#f44336\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.progressText,\n            children: [difficultyProgress[level], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(QnSpeakPage, \"gs6Q1xYsKFhpvqdxIRvQ/71Mu8E=\");\n_c = QnSpeakPage;\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n    flexDirection: \"column\",\n    backgroundColor: \"#e0f7fa\",\n    fontFamily: \"Arial, sans-serif\",\n    padding: \"2rem\"\n  },\n  title: {\n    marginBottom: \"20px\",\n    color: \"#00796b\"\n  },\n  cardBox: {\n    border: \"1px solid #ccc\",\n    borderRadius: \"10px\",\n    padding: \"2rem\",\n    width: \"450px\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"0 6px 12px rgba(0,0,0,0.1)\",\n    textAlign: \"center\"\n  },\n  question: {\n    marginBottom: \"1rem\",\n    fontSize: \"16px\"\n  },\n  answer: {\n    marginBottom: \"1rem\",\n    color: \"#007bff\",\n    fontSize: \"16px\"\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    marginBottom: \"1rem\",\n    flexWrap: \"wrap\"\n  },\n  speakBtn: {\n    padding: \"8px 16px\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#4caf50\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  stopBtn: {\n    padding: \"8px 16px\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#f44336\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  nextBtn: {\n    padding: \"8px 16px\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#2196f3\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  progressContainer: {\n    marginTop: \"1.5rem\",\n    textAlign: \"left\"\n  },\n  progressRow: {\n    marginBottom: \"0.5rem\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  progressBarBg: {\n    display: \"inline-block\",\n    width: \"250px\",\n    height: \"10px\",\n    backgroundColor: \"#ddd\",\n    borderRadius: \"5px\",\n    marginLeft: \"10px\",\n    overflow: \"hidden\"\n  },\n  progressBarFill: {\n    height: \"100%\",\n    transition: \"width 0.3s\"\n  },\n  progressText: {\n    marginLeft: \"0.5rem\"\n  },\n  noFlashcards: {\n    textAlign: \"center\",\n    marginTop: \"2rem\",\n    fontSize: \"18px\"\n  }\n};\nexport default QnSpeakPage;\nvar _c;\n$RefreshReg$(_c, \"QnSpeakPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QnSpeakPage","_s","flashcards","setFlashcards","currentIndex","setCurrentIndex","showAnswer","setShowAnswer","difficultyProgress","setDifficultyProgress","easy","medium","hard","totalByDifficulty","setTotalByDifficulty","shownByDifficulty","setShownByDifficulty","loadFlashcards","cards","JSON","parse","localStorage","getItem","normalizedCards","map","c","difficulty","toLowerCase","totals","forEach","undefined","length","incrementProgress","window","addEventListener","removeEventListener","currentCard","level","prev","updatedShown","Math","min","prevProgress","updatedProgress","round","speakAnswer","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","answer","lang","speak","stopSpeech","nextQuestion","nextIdx","alert","style","styles","noFlashcards","children","fileName","_jsxFileName","lineNumber","columnNumber","container","title","cardBox","question","buttons","speakBtn","onClick","stopBtn","nextBtn","progressContainer","progressRow","charAt","toUpperCase","slice","progressBarBg","progressBarFill","width","backgroundColor","progressText","_c","display","justifyContent","alignItems","minHeight","flexDirection","fontFamily","padding","marginBottom","color","border","borderRadius","boxShadow","textAlign","fontSize","gap","flexWrap","cursor","marginTop","height","marginLeft","overflow","transition","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/QnSpeakPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst QnSpeakPage = () => {\r\n  const [flashcards, setFlashcards] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [difficultyProgress, setDifficultyProgress] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n  const [totalByDifficulty, setTotalByDifficulty] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n  const [shownByDifficulty, setShownByDifficulty] = useState({\r\n    easy: 0,\r\n    medium: 0,\r\n    hard: 0,\r\n  });\r\n\r\n  // Load flashcards and calculate totals\r\n  const loadFlashcards = () => {\r\n    const cards = JSON.parse(localStorage.getItem(\"flashcards\")) || [];\r\n    const normalizedCards = cards.map((c) => ({\r\n      ...c,\r\n      difficulty: c.difficulty ? c.difficulty.toLowerCase() : \"easy\",\r\n    }));\r\n    setFlashcards(normalizedCards);\r\n\r\n    const totals = { easy: 0, medium: 0, hard: 0 };\r\n    normalizedCards.forEach((c) => {\r\n      if (totals[c.difficulty] !== undefined) totals[c.difficulty]++;\r\n    });\r\n    setTotalByDifficulty(totals);\r\n\r\n    setShownByDifficulty({ easy: 0, medium: 0, hard: 0 });\r\n    setDifficultyProgress({ easy: 0, medium: 0, hard: 0 });\r\n    setCurrentIndex(0);\r\n\r\n    if (normalizedCards.length > 0) incrementProgress(normalizedCards[0].difficulty);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFlashcards();\r\n    window.addEventListener(\"storage\", loadFlashcards);\r\n    return () => window.removeEventListener(\"storage\", loadFlashcards);\r\n  }, []);\r\n\r\n  const currentCard = flashcards[currentIndex];\r\n\r\n  const incrementProgress = (level) => {\r\n    if (!level || !totalByDifficulty[level]) return;\r\n\r\n    setShownByDifficulty((prev) => {\r\n      const updatedShown = { ...prev };\r\n      updatedShown[level] = Math.min(\r\n        (updatedShown[level] || 0) + 1,\r\n        totalByDifficulty[level]\r\n      );\r\n\r\n      setDifficultyProgress((prevProgress) => {\r\n        const updatedProgress = { ...prevProgress };\r\n        updatedProgress[level] = Math.round(\r\n          (updatedShown[level] / totalByDifficulty[level]) * 100\r\n        );\r\n        return updatedProgress;\r\n      });\r\n\r\n      return updatedShown;\r\n    });\r\n  };\r\n\r\n  const speakAnswer = () => {\r\n    if (!currentCard) return;\r\n    if (\"speechSynthesis\" in window) {\r\n      window.speechSynthesis.cancel();\r\n      const utterance = new SpeechSynthesisUtterance(currentCard.answer);\r\n      utterance.lang = \"en-US\";\r\n      window.speechSynthesis.speak(utterance);\r\n      setShowAnswer(true);\r\n    }\r\n  };\r\n\r\n  const stopSpeech = () => {\r\n    if (\"speechSynthesis\" in window) window.speechSynthesis.cancel();\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    stopSpeech();\r\n    setShowAnswer(false);\r\n    if (currentIndex < flashcards.length - 1) {\r\n      const nextIdx = currentIndex + 1;\r\n      setCurrentIndex(nextIdx);\r\n      incrementProgress(flashcards[nextIdx].difficulty);\r\n    } else {\r\n      alert(\"🎉 You have completed all flashcards!\");\r\n      setCurrentIndex(0);\r\n    }\r\n  };\r\n\r\n  if (flashcards.length === 0) {\r\n    return <p style={styles.noFlashcards}>No flashcards available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>📚 QnSpeak Flashcards</h2>\r\n\r\n      <div style={styles.cardBox}>\r\n        <div style={styles.question}><strong>Q:</strong> {currentCard.question}</div>\r\n\r\n        {showAnswer && (\r\n          <div style={styles.answer}><strong>A:</strong> {currentCard.answer}</div>\r\n        )}\r\n\r\n        <div style={styles.buttons}>\r\n          <button style={styles.speakBtn} onClick={speakAnswer}>🎤 Voice Answer</button>\r\n          <button style={styles.stopBtn} onClick={stopSpeech}>⏹ Stop</button>\r\n          <button style={styles.nextBtn} onClick={nextQuestion}>➡ Next</button>\r\n        </div>\r\n\r\n        <div style={styles.progressContainer}>\r\n          <h4>Progress by Difficulty:</h4>\r\n          {[\"easy\", \"medium\", \"hard\"].map((level) => (\r\n            <div key={level} style={styles.progressRow}>\r\n              <strong>{level.charAt(0).toUpperCase() + level.slice(1)}</strong>\r\n              <div style={styles.progressBarBg}>\r\n                <div\r\n                  style={{\r\n                    ...styles.progressBarFill,\r\n                    width: `${difficultyProgress[level]}%`,\r\n                    backgroundColor: level === \"easy\" ? \"#4caf50\" : level === \"medium\" ? \"#ff9800\" : \"#f44336\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <span style={styles.progressText}>{difficultyProgress[level]}%</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"100vh\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#e0f7fa\",\r\n    fontFamily: \"Arial, sans-serif\",\r\n    padding: \"2rem\",\r\n  },\r\n  title: { marginBottom: \"20px\", color: \"#00796b\" },\r\n  cardBox: {\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"10px\",\r\n    padding: \"2rem\",\r\n    width: \"450px\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"0 6px 12px rgba(0,0,0,0.1)\",\r\n    textAlign: \"center\",\r\n  },\r\n  question: { marginBottom: \"1rem\", fontSize: \"16px\" },\r\n  answer: { marginBottom: \"1rem\", color: \"#007bff\", fontSize: \"16px\" },\r\n  buttons: { display: \"flex\", justifyContent: \"center\", gap: \"10px\", marginBottom: \"1rem\", flexWrap: \"wrap\" },\r\n  speakBtn: { padding: \"8px 16px\", borderRadius: \"8px\", backgroundColor: \"#4caf50\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n  stopBtn: { padding: \"8px 16px\", borderRadius: \"8px\", backgroundColor: \"#f44336\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n  nextBtn: { padding: \"8px 16px\", borderRadius: \"8px\", backgroundColor: \"#2196f3\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n  progressContainer: { marginTop: \"1.5rem\", textAlign: \"left\" },\r\n  progressRow: { marginBottom: \"0.5rem\", display: \"flex\", alignItems: \"center\" },\r\n  progressBarBg: { display: \"inline-block\", width: \"250px\", height: \"10px\", backgroundColor: \"#ddd\", borderRadius: \"5px\", marginLeft: \"10px\", overflow: \"hidden\" },\r\n  progressBarFill: { height: \"100%\", transition: \"width 0.3s\" },\r\n  progressText: { marginLeft: \"0.5rem\" },\r\n  noFlashcards: { textAlign: \"center\", marginTop: \"2rem\", fontSize: \"18px\" },\r\n};\r\n\r\nexport default QnSpeakPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}