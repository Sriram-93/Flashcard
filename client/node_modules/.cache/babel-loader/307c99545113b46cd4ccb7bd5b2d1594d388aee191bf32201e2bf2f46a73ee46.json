{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\InputPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./InputPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return setMessage(\"❌ Please select a PDF file.\");\n    const formData = new FormData();\n    formData.append(\"pdf\", file);\n    const userId = localStorage.getItem(\"userId\") || \"\";\n    formData.append(\"userId\", userId);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/flashcards/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (!(data !== null && data !== void 0 && data.flashcards) || !Array.isArray(data.flashcards)) {\n        setMessage(\"❌ Failed to generate flashcards\");\n        return;\n      }\n\n      // Save flashcards history in localStorage\n      const history = JSON.parse(localStorage.getItem(\"flashcardHistory\")) || [];\n      const newUpload = {\n        filename: file.name,\n        // PDF filename\n        date: new Date().toLocaleString(),\n        // upload date/time\n        cards: data.flashcards\n      };\n      history.push(newUpload);\n      localStorage.setItem(\"flashcardHistory\", JSON.stringify(history));\n\n      // Save current flashcards\n      localStorage.setItem(\"flashcards\", JSON.stringify(data.flashcards));\n      setMessage(`✅ New flashcards generated: ${data.flashcards.length}`);\n      setTimeout(() => navigate(\"/review\"), 1000);\n    } catch (err) {\n      console.error(err);\n      setMessage(\"❌ Upload failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: \"url('https://images.unsplash.com/photo-1522202176988-66273c2fd55f?auto=format&fit=crop&w=1950&q=80')\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundAttachment: \"fixed\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload PDF to Generate Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: e => setFile(e.target.files[0] || null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(InputPage, \"JxpIjuRyf5B1GOjWhNPLvE1F3uk=\", false, function () {\n  return [useNavigate];\n});\n_c = InputPage;\nexport default InputPage;\ngive;\nvar _c;\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputPage","_s","file","setFile","message","setMessage","navigate","handleUpload","e","preventDefault","formData","FormData","append","userId","localStorage","getItem","res","fetch","method","body","data","json","flashcards","Array","isArray","history","JSON","parse","newUpload","filename","name","date","Date","toLocaleString","cards","push","setItem","stringify","length","setTimeout","err","console","error","style","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","display","justifyContent","alignItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","_c","give","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/InputPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./InputPage.css\";\r\n\r\nconst InputPage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return setMessage(\"❌ Please select a PDF file.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"pdf\", file);\r\n\r\n    const userId = localStorage.getItem(\"userId\") || \"\";\r\n    formData.append(\"userId\", userId);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/flashcards/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (!data?.flashcards || !Array.isArray(data.flashcards)) {\r\n        setMessage(\"❌ Failed to generate flashcards\");\r\n        return;\r\n      }\r\n\r\n      // Save flashcards history in localStorage\r\n      const history = JSON.parse(localStorage.getItem(\"flashcardHistory\")) || [];\r\n\r\n      const newUpload = {\r\n        filename: file.name,                // PDF filename\r\n        date: new Date().toLocaleString(),  // upload date/time\r\n        cards: data.flashcards,\r\n      };\r\n\r\n      history.push(newUpload);\r\n      localStorage.setItem(\"flashcardHistory\", JSON.stringify(history));\r\n\r\n      // Save current flashcards\r\n      localStorage.setItem(\"flashcards\", JSON.stringify(data.flashcards));\r\n\r\n      setMessage(`✅ New flashcards generated: ${data.flashcards.length}`);\r\n      setTimeout(() => navigate(\"/review\"), 1000);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(\"❌ Upload failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage:\r\n          \"url('https://images.unsplash.com/photo-1522202176988-66273c2fd55f?auto=format&fit=crop&w=1950&q=80')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundAttachment: \"fixed\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"input-container\">\r\n        <h2>Upload PDF to Generate Flashcards</h2>\r\n        <form onSubmit={handleUpload} className=\"input-form\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf\"\r\n            onChange={(e) => setFile(e.target.files[0] || null)}\r\n          />\r\n          <button type=\"submit\">Upload</button>\r\n        </form>\r\n        {message && <p className=\"upload-message\">{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputPage;\r\ngive"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}