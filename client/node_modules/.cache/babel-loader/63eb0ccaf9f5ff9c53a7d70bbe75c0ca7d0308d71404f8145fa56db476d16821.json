{"ast":null,"code":"// src/serviceWorkerRegistration.js\n// This optional code is used to register a service worker.\n// register() is not called by default.\nconst isLocalhost=Boolean(window.location.hostname===\"localhost\"||// [::1] is the IPv6 localhost address.\nwindow.location.hostname===\"[::1]\"||// 127.0.0.0/8 are considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){3}$/));export function register(config){if(\"serviceWorker\"in navigator){const publicUrl=new URL(process.env.PUBLIC_URL,window.location.href);if(publicUrl.origin!==window.location.origin){return;}window.addEventListener(\"load\",()=>{const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){// This is running on localhost. Check service worker.\ncheckValidServiceWorker(swUrl,config);}else{// Not localhost. Just register service worker.\nregisterValidSW(swUrl,config);}});}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{if(registration.waiting){registration.waiting.postMessage({type:\"SKIP_WAITING\"});}}).catch(error=>{console.error(\"Error during service worker registration:\",error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl,{headers:{\"Service-Worker\":\"script\"}}).then(response=>{const contentType=response.headers.get(\"content-type\");if(response.status===404||contentType&&contentType.indexOf(\"javascript\")===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log(\"No internet connection. App is running in offline mode.\");});}export function unregister(){if(\"serviceWorker\"in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","publicUrl","URL","process","env","PUBLIC_URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","waiting","postMessage","type","catch","error","console","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","log"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/serviceWorkerRegistration.js"],"sourcesContent":["// src/serviceWorkerRegistration.js\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\"serviceWorker\" in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Check service worker.\r\n        checkValidServiceWorker(swUrl, config);\r\n      } else {\r\n        // Not localhost. Just register service worker.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      if (registration.waiting) {\r\n        registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, { headers: { \"Service-Worker\": \"script\" } })\r\n    .then((response) => {\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister();\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA;AAEA;AACA;AAEA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACtC;AACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpC;AACAF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,+CACF,CACJ,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAACC,MAAM,CAAE,CAC/B,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAAEX,MAAM,CAACC,QAAQ,CAACW,IAAI,CAAC,CACvE,GAAIL,SAAS,CAACM,MAAM,GAAKb,MAAM,CAACC,QAAQ,CAACY,MAAM,CAAE,CAC/C,OACF,CAEAb,MAAM,CAACc,gBAAgB,CAAC,MAAM,CAAE,IAAM,CACpC,KAAM,CAAAC,KAAK,CAAG,GAAGN,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB,CAE3D,GAAIb,WAAW,CAAE,CACf;AACAkB,uBAAuB,CAACD,KAAK,CAAEV,MAAM,CAAC,CACxC,CAAC,IAAM,CACL;AACAY,eAAe,CAACF,KAAK,CAAEV,MAAM,CAAC,CAChC,CACF,CAAC,CAAC,CACJ,CACF,CAEA,QAAS,CAAAY,eAAeA,CAACF,KAAK,CAAEV,MAAM,CAAE,CACtCC,SAAS,CAACY,aAAa,CACpBd,QAAQ,CAACW,KAAK,CAAC,CACfI,IAAI,CAAEC,YAAY,EAAK,CACtB,GAAIA,YAAY,CAACC,OAAO,CAAE,CACxBD,YAAY,CAACC,OAAO,CAACC,WAAW,CAAC,CAAEC,IAAI,CAAE,cAAe,CAAC,CAAC,CAC5D,CACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACnE,CAAC,CAAC,CACN,CAEA,QAAS,CAAAT,uBAAuBA,CAACD,KAAK,CAAEV,MAAM,CAAE,CAC9CsB,KAAK,CAACZ,KAAK,CAAE,CAAEa,OAAO,CAAE,CAAE,gBAAgB,CAAE,QAAS,CAAE,CAAC,CAAC,CACtDT,IAAI,CAAEU,QAAQ,EAAK,CAClB,KAAM,CAAAC,WAAW,CAAGD,QAAQ,CAACD,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC,CACxD,GACEF,QAAQ,CAACG,MAAM,GAAK,GAAG,EACtBF,WAAW,EAAIA,WAAW,CAACG,OAAO,CAAC,YAAY,CAAC,GAAK,CAAC,CAAE,CACzD,CACA3B,SAAS,CAACY,aAAa,CAACgB,KAAK,CAACf,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACe,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CAAC,IAAM,CACLlB,eAAe,CAACF,KAAK,CAAEV,MAAM,CAAC,CAChC,CACF,CAAC,CAAC,CACDmB,KAAK,CAAC,IAAM,CACXE,OAAO,CAACU,GAAG,CAAC,yDAAyD,CAAC,CACxE,CAAC,CAAC,CACN,CAEA,MAAO,SAAS,CAAAD,UAAUA,CAAA,CAAG,CAC3B,GAAI,eAAe,EAAI,CAAA7B,SAAS,CAAE,CAChCA,SAAS,CAACY,aAAa,CAACgB,KAAK,CAACf,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACe,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}