{"ast":null,"code":"// src/serviceWorkerRegistration.js\n// This code registers the service worker generated by CRA build\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export function register(config){if(process.env.NODE_ENV==='production'&&'serviceWorker'in navigator){const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){// Running on localhost → check service worker\ncheckValidServiceWorker(swUrl,config);}else{// Register service worker directly\nregisterValidSW(swUrl,config);}}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker){installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('New content available, refresh app.');}else{console.log('Content cached for offline use.');}}};}};}).catch(error=>{console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl).then(response=>{if(response.status===404||response.headers.get('content-type').indexOf('javascript')===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log('No internet connection. App is running in offline mode.');});}export function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","process","env","NODE_ENV","navigator","swUrl","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","status","headers","get","indexOf","ready","unregister","reload"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/serviceWorkerRegistration.js"],"sourcesContent":["// src/serviceWorkerRegistration.js\r\n\r\n// This code registers the service worker generated by CRA build\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n    if (isLocalhost) {\r\n      // Running on localhost → check service worker\r\n      checkValidServiceWorker(swUrl, config);\r\n    } else {\r\n      // Register service worker directly\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                console.log('New content available, refresh app.');\r\n              } else {\r\n                console.log('Content cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA;AAEA;AACA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACtCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,wDACF,CACJ,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAACC,MAAM,CAAE,CAC/B,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CACzE,KAAM,CAAAC,KAAK,CAAG,GAAGJ,OAAO,CAACC,GAAG,CAACI,UAAU,oBAAoB,CAE3D,GAAIb,WAAW,CAAE,CACf;AACAc,uBAAuB,CAACF,KAAK,CAAEL,MAAM,CAAC,CACxC,CAAC,IAAM,CACL;AACAQ,eAAe,CAACH,KAAK,CAAEL,MAAM,CAAC,CAChC,CACF,CACF,CAEA,QAAS,CAAAQ,eAAeA,CAACH,KAAK,CAAEL,MAAM,CAAE,CACtCI,SAAS,CAACK,aAAa,CACpBV,QAAQ,CAACM,KAAK,CAAC,CACfK,IAAI,CAAEC,YAAY,EAAK,CACtBA,YAAY,CAACC,aAAa,CAAG,IAAM,CACjC,KAAM,CAAAC,gBAAgB,CAAGF,YAAY,CAACG,UAAU,CAChD,GAAID,gBAAgB,CAAE,CACpBA,gBAAgB,CAACE,aAAa,CAAG,IAAM,CACrC,GAAIF,gBAAgB,CAACG,KAAK,GAAK,WAAW,CAAE,CAC1C,GAAIZ,SAAS,CAACK,aAAa,CAACQ,UAAU,CAAE,CACtCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CACpD,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CACF,CACF,CAAC,CACH,CACF,CAAC,CACH,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBH,OAAO,CAACG,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACnE,CAAC,CAAC,CACN,CAEA,QAAS,CAAAd,uBAAuBA,CAACF,KAAK,CAAEL,MAAM,CAAE,CAC9CsB,KAAK,CAACjB,KAAK,CAAC,CACTK,IAAI,CAAEa,QAAQ,EAAK,CAClB,GACEA,QAAQ,CAACC,MAAM,GAAK,GAAG,EACvBD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAACC,OAAO,CAAC,YAAY,CAAC,GAAK,CAAC,CAAC,CACjE,CACAvB,SAAS,CAACK,aAAa,CAACmB,KAAK,CAAClB,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACkB,UAAU,CAAC,CAAC,CAACnB,IAAI,CAAC,IAAM,CACnCf,MAAM,CAACC,QAAQ,CAACkC,MAAM,CAAC,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLtB,eAAe,CAACH,KAAK,CAAEL,MAAM,CAAC,CAChC,CACF,CAAC,CAAC,CACDoB,KAAK,CAAC,IAAM,CACXF,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC,CACxE,CAAC,CAAC,CACN,CAEA,MAAO,SAAS,CAAAU,UAAUA,CAAA,CAAG,CAC3B,GAAI,eAAe,EAAI,CAAAzB,SAAS,CAAE,CAChCA,SAAS,CAACK,aAAa,CAACmB,KAAK,CAAClB,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACkB,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}