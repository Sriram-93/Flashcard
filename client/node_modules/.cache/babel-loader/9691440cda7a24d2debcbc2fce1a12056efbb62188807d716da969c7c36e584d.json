{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramya\\\\flashcard-fullstack\\\\client\\\\src\\\\pages\\\\QnSpeakPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnSpeakPage = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selected, setSelected] = useState(\"Easy\");\n  const [idx, setIdx] = useState(0);\n  const [done, setDone] = useState({\n    Easy: new Set(),\n    Medium: new Set(),\n    Hard: new Set()\n  });\n  const navigate = useNavigate();\n\n  // Load flashcards and initialize\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"flashcards\") || \"[]\");\n    setCards(saved);\n    setIdx(0);\n    setDone({\n      Easy: new Set(),\n      Medium: new Set(),\n      Hard: new Set()\n    });\n  }, []);\n  const filtered = useMemo(() => cards.filter(c => (c.difficulty || \"Easy\") === selected), [cards, selected]);\n  const current = filtered[idx] || null;\n  const totalInCat = filtered.length;\n\n  // Automatically mark current question as done for progress\n  useEffect(() => {\n    if (!current) return;\n    const id = current._id || current.id || `${selected}-${idx}`;\n    setDone(prev => {\n      const copy = {\n        Easy: new Set(prev.Easy),\n        Medium: new Set(prev.Medium),\n        Hard: new Set(prev.Hard)\n      };\n      copy[selected].add(id); // mark current question as done\n      return copy;\n    });\n  }, [current, selected, idx]);\n  const speakAnswer = () => {\n    if (!current) return;\n    const u = new SpeechSynthesisUtterance(current.answer || \"\");\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(u);\n  };\n  const stopSpeech = () => {\n    if (\"speechSynthesis\" in window) {\n      window.speechSynthesis.cancel();\n    }\n  };\n  const nextQuestion = () => {\n    stopSpeech();\n    if (idx < totalInCat - 1) {\n      setIdx(idx + 1);\n    } else {\n      alert(`✅ You have completed all ${selected} questions!`);\n      setIdx(0);\n    }\n  };\n  const progressPct = level => {\n    const total = cards.filter(c => (c.difficulty || \"Easy\") === level).length;\n    if (!total) return 0;\n    return Math.min(done[level].size / total * 100, 100);\n  };\n  if (cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"2rem\"\n      },\n      children: \"No flashcards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"\\uD83D\\uDCDA Test Mode: Hear the Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.btnGroup,\n      children: [\"Easy\", \"Medium\", \"Hard\"].map(lvl => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.filterBtn,\n        onClick: () => {\n          setSelected(lvl);\n          setIdx(0);\n        },\n        children: lvl\n      }, lvl, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.progressBox,\n      children: [\"Easy\", \"Medium\", \"Hard\"].map(lvl => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [lvl, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), \" \", progressPct(lvl).toFixed(0), \"%\", /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progressPct(lvl),\n          max: 100,\n          style: styles.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, lvl, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), totalInCat === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions for \", selected, \". Upload a PDF or try another filter.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : current && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), \" \", current.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.speakBtn,\n        onClick: speakAnswer,\n        children: \"\\uD83C\\uDFA4 Hear the Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.speakBtn,\n          marginLeft: 10\n        },\n        onClick: stopSpeech,\n        children: \"\\u23F9 Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.nextBtn,\n          onClick: nextQuestion,\n          children: \"Next \\u27A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 10\n          },\n          children: [done[selected].size, \" / \", totalInCat, \" in \", selected]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.navButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/review\"),\n        style: styles.navBtn,\n        children: \"\\u2B05\\uFE0F Back to Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        style: styles.navBtn,\n        children: \"\\uD83C\\uDFE0 Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(QnSpeakPage, \"+4VyL6cGu/ByiFrRbmGMFGdT8SI=\", false, function () {\n  return [useNavigate];\n});\n_c = QnSpeakPage;\nconst styles = {\n  container: {\n    textAlign: \"center\",\n    padding: \"30px\",\n    fontFamily: \"Arial, sans-serif\"\n  },\n  title: {\n    marginBottom: \"20px\",\n    color: \"#2c3e50\"\n  },\n  btnGroup: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    marginBottom: \"20px\"\n  },\n  filterBtn: {\n    padding: \"8px 14px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #888\",\n    background: \"#f0f0f0\",\n    cursor: \"pointer\"\n  },\n  progressBox: {\n    marginBottom: \"20px\",\n    textAlign: \"left\",\n    display: \"inline-block\"\n  },\n  progress: {\n    width: \"260px\",\n    display: \"block\",\n    marginBottom: \"10px\"\n  },\n  card: {\n    margin: \"0 auto\",\n    maxWidth: \"500px\",\n    padding: \"20px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"12px\",\n    background: \"#f9f9f9\",\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\n  },\n  speakBtn: {\n    padding: \"10px 16px\",\n    borderRadius: \"8px\",\n    background: \"#3498db\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  nextBtn: {\n    padding: \"8px 14px\",\n    borderRadius: \"8px\",\n    background: \"#2ecc71\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  doneMsg: {\n    color: \"green\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\"\n  },\n  navButtons: {\n    marginTop: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"15px\"\n  },\n  navBtn: {\n    padding: \"10px 16px\",\n    borderRadius: \"8px\",\n    background: \"#9b59b6\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\"\n  }\n};\nexport default QnSpeakPage;\nvar _c;\n$RefreshReg$(_c, \"QnSpeakPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","jsxDEV","_jsxDEV","QnSpeakPage","_s","cards","setCards","selected","setSelected","idx","setIdx","done","setDone","Easy","Set","Medium","Hard","navigate","saved","JSON","parse","localStorage","getItem","filtered","filter","c","difficulty","current","totalInCat","length","id","_id","prev","copy","add","speakAnswer","u","SpeechSynthesisUtterance","answer","window","speechSynthesis","cancel","speak","stopSpeech","nextQuestion","alert","progressPct","level","total","Math","min","size","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","title","btnGroup","map","lvl","filterBtn","onClick","progressBox","marginBottom","toFixed","value","max","progress","card","question","speakBtn","marginLeft","nextBtn","navButtons","navBtn","_c","padding","fontFamily","color","display","justifyContent","gap","borderRadius","border","background","cursor","width","margin","maxWidth","boxShadow","doneMsg","fontWeight","$RefreshReg$"],"sources":["C:/Users/Ramya/flashcard-fullstack/client/src/pages/QnSpeakPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst QnSpeakPage = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [selected, setSelected] = useState(\"Easy\");\r\n  const [idx, setIdx] = useState(0);\r\n  const [done, setDone] = useState({\r\n    Easy: new Set(),\r\n    Medium: new Set(),\r\n    Hard: new Set(),\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Load flashcards and initialize\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"flashcards\") || \"[]\");\r\n    setCards(saved);\r\n    setIdx(0);\r\n    setDone({ Easy: new Set(), Medium: new Set(), Hard: new Set() });\r\n  }, []);\r\n\r\n  const filtered = useMemo(\r\n    () => cards.filter((c) => (c.difficulty || \"Easy\") === selected),\r\n    [cards, selected]\r\n  );\r\n\r\n  const current = filtered[idx] || null;\r\n  const totalInCat = filtered.length;\r\n\r\n  // Automatically mark current question as done for progress\r\n  useEffect(() => {\r\n    if (!current) return;\r\n    const id = current._id || current.id || `${selected}-${idx}`;\r\n    setDone((prev) => {\r\n      const copy = {\r\n        Easy: new Set(prev.Easy),\r\n        Medium: new Set(prev.Medium),\r\n        Hard: new Set(prev.Hard),\r\n      };\r\n      copy[selected].add(id); // mark current question as done\r\n      return copy;\r\n    });\r\n  }, [current, selected, idx]);\r\n\r\n  const speakAnswer = () => {\r\n    if (!current) return;\r\n    const u = new SpeechSynthesisUtterance(current.answer || \"\");\r\n    window.speechSynthesis.cancel();\r\n    window.speechSynthesis.speak(u);\r\n  };\r\n\r\n  const stopSpeech = () => {\r\n    if (\"speechSynthesis\" in window) {\r\n      window.speechSynthesis.cancel();\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    stopSpeech();\r\n    if (idx < totalInCat - 1) {\r\n      setIdx(idx + 1);\r\n    } else {\r\n      alert(`✅ You have completed all ${selected} questions!`);\r\n      setIdx(0);\r\n    }\r\n  };\r\n\r\n  const progressPct = (level) => {\r\n    const total = cards.filter((c) => (c.difficulty || \"Easy\") === level).length;\r\n    if (!total) return 0;\r\n    return Math.min((done[level].size / total) * 100, 100);\r\n  };\r\n\r\n  if (cards.length === 0) {\r\n    return <p style={{ textAlign: \"center\", marginTop: \"2rem\" }}>No flashcards available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>📚 Test Mode: Hear the Answer</h2>\r\n\r\n      <div style={styles.btnGroup}>\r\n        {[\"Easy\", \"Medium\", \"Hard\"].map((lvl) => (\r\n          <button\r\n            key={lvl}\r\n            style={styles.filterBtn}\r\n            onClick={() => { setSelected(lvl); setIdx(0); }}\r\n          >\r\n            {lvl}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={styles.progressBox}>\r\n        {[\"Easy\", \"Medium\", \"Hard\"].map((lvl) => (\r\n          <div key={lvl} style={{ marginBottom: 8 }}>\r\n            <strong>{lvl}:</strong> {progressPct(lvl).toFixed(0)}%\r\n            <progress value={progressPct(lvl)} max={100} style={styles.progress} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {totalInCat === 0 ? (\r\n        <div>No questions for {selected}. Upload a PDF or try another filter.</div>\r\n      ) : (\r\n        current && (\r\n          <div style={styles.card}>\r\n            <div style={{ marginBottom: 8 }}>\r\n              <strong>Q:</strong> {current.question}\r\n            </div>\r\n            <button style={styles.speakBtn} onClick={speakAnswer}>\r\n              🎤 Hear the Answer\r\n            </button>\r\n            <button style={{ ...styles.speakBtn, marginLeft: 10 }} onClick={stopSpeech}>\r\n              ⏹ Stop\r\n            </button>\r\n            <div style={{ marginTop: 12 }}>\r\n              <button style={styles.nextBtn} onClick={nextQuestion}>\r\n                Next ➡️\r\n              </button>\r\n              <span style={{ marginLeft: 10 }}>\r\n                {done[selected].size} / {totalInCat} in {selected}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n\r\n      <div style={styles.navButtons}>\r\n        <button onClick={() => navigate(\"/review\")} style={styles.navBtn}>\r\n          ⬅️ Back to Review\r\n        </button>\r\n        <button onClick={() => navigate(\"/\")} style={styles.navBtn}>\r\n          🏠 Home\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: { textAlign: \"center\", padding: \"30px\", fontFamily: \"Arial, sans-serif\" },\r\n  title: { marginBottom: \"20px\", color: \"#2c3e50\" },\r\n  btnGroup: { display: \"flex\", justifyContent: \"center\", gap: \"10px\", marginBottom: \"20px\" },\r\n  filterBtn: { padding: \"8px 14px\", borderRadius: \"8px\", border: \"1px solid #888\", background: \"#f0f0f0\", cursor: \"pointer\" },\r\n  progressBox: { marginBottom: \"20px\", textAlign: \"left\", display: \"inline-block\" },\r\n  progress: { width: \"260px\", display: \"block\", marginBottom: \"10px\" },\r\n  card: { margin: \"0 auto\", maxWidth: \"500px\", padding: \"20px\", border: \"1px solid #ddd\", borderRadius: \"12px\", background: \"#f9f9f9\", boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\" },\r\n  speakBtn: { padding: \"10px 16px\", borderRadius: \"8px\", background: \"#3498db\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n  nextBtn: { padding: \"8px 14px\", borderRadius: \"8px\", background: \"#2ecc71\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n  doneMsg: { color: \"green\", fontWeight: \"bold\", marginTop: \"20px\" },\r\n  navButtons: { marginTop: \"30px\", display: \"flex\", justifyContent: \"center\", gap: \"15px\" },\r\n  navBtn: { padding: \"10px 16px\", borderRadius: \"8px\", background: \"#9b59b6\", color: \"white\", border: \"none\", cursor: \"pointer\" },\r\n};\r\n\r\nexport default QnSpeakPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}